name: bootstrap-sbx

env:
  AZURE_E_EUS_SP_CREDS: ${{ secrets.AZURE_T_CONTOSO_CORE_SP }}

  location: westus2
  tfbackend_rg_name: D-WUS2-TFSTATE
  tfbackend_sa_name: dwus2contosotfstate
  tfbackend_container_name: d-wus2-contoso-tfstate
  tf_client_obj_id: 8f5ad06b-2329-4e8e-9985-219c4b2b4049

on: workflow_dispatch

jobs:
  bootstrap:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2.3.4

      - name: Connect to Azure
        uses: azure/login@v1
        with:
          creds: ${{ env.AZURE_E_EUS_SP_CREDS }}
          environment: "AzureCloud"
          enable-AzPSSession: true

      - name: Assert Azure Resources
        shell: pwsh
        run: |
          Install-Module -Name Az.Accounts, Az.Resources, Az.Storage -Scope CurrentUser -Force

          Write-Host 'Asserting Bootstrap Resources'

          if (-Not (Get-AzResourceGroup -Name $env:tfbackend_rg_name -Location $env:location -ErrorAction 'SilentlyContinue'))
          {
              New-AzResourceGroup -Name $env:tfbackend_rg_name -Location $env:location
          }

          if (-Not ($sa = Get-AzStorageAccount -ResourceGroupName $env:tfbackend_rg_name -Name $env:tfbackend_sa_name -ErrorAction 'SilentlyContinue'))
          {
              $sa = New-AzStorageAccount -ResourceGroupName $env:tfbackend_rg_name -Name $env:tfbackend_sa_name -Location $env:location -SkuName 'Standard_GRS' -AllowBlobPublicAccess $false
          }

          if (-Not (Get-AzStorageContainer -Name $env:tfbackend_container_name -Context $sa.Context -ErrorAction 'SilentlyContinue'))
          {
              New-AzStorageContainer -Name $env:tfbackend_container_name -Context $sa.Context
          }

          if (-Not (Get-AzRoleAssignment -ObjectId $env:tf_client_obj_id -RoleDefinitionName 'Reader and Data Access' -Scope $sa.Id  -ErrorAction 'SilentlyContinue'))
          {
              az role assignment create --assignee-object-id $env:tf_client_obj_id --role 'Reader and Data Access' --scope $sa.Id
          }

          az feature register -n 'AllowNfsFileShares' --namespace 'Microsoft.Storage' #need to re-run Storage provider once this is complete

          az provider register -n 'Microsoft.Network' #Required for Bastion
          az provider register -n 'Microsoft.Compute' #Required for VMs
          az provider register -n 'Microsoft.PolicyInsights'
          az provider register -n 'Microsoft.KeyVault'
          az provider register -n 'Microsoft.Automation'
          az provider register -n 'Microsoft.RecoveryServices'
          az provider register -n 'Microsoft.DevTestLab' #Required for autoshutdown
          az provider register -n 'Microsoft.DBforPostgreSQL'
          #should add while loop here
